---
layout: base.njk
title: "Inventaire des équipements (interne)"
description: "Liste des équipements pour le contrôle des entrées et des sorties."
permalink: "/fr/la-casa/equipamiento/"
noindex: true
lang: "fr"
alternates:
  - { lang: "es", url: "/la-casa/equipamiento/" }
  - { lang: "en", url: "/en/la-casa/equipamiento/" }
  - { lang: "fr", url: "/fr/la-casa/equipamiento/" }
xDefault: "/la-casa/equipamiento/"
---

<section class="container prose">
  <div class="card printable">
    <div style="display:flex;align-items:center;justify-content:space-between;gap:1rem;flex-wrap:wrap">
      <div>
        <h1 class="font-primary" style="margin:.2rem 0">Inventario de equipamiento</h1>
        <p style="margin:.2rem 0;color:var(--muted)">Uso interno · Imprime o usa en el móvil</p>
      </div>
      <div class="no-print" style="display:flex;gap:.5rem">
        <button class="btn" onclick="window.print()">Imprimir</button>
        <button class="btn btn-secondary" id="invReset">Borrar marcas</button>
      </div>
    </div>

    <div class="inv-meta">
      <div><strong>Fecha:</strong> <span id="invDate"></span></div>
      <div><strong>Turno:</strong> <span contenteditable="true" class="editable">Limpieza / Revisión</span></div>
      <div><strong>Observaciones:</strong> <span contenteditable="true" class="editable">—</span></div>
    </div>

    {# =============================
       COMPATIBILIDAD DE ESQUEMAS
       - Nuevo: equipamiento.amenities (array de grupos con items)
       - Antiguo: { "Categoría": [ {item:"..."}] }
       ============================= #}
    {% set data = equipamiento %}

    {% if data.amenities %}
      {# ===== Esquema PRO ===== #}
      {% for group in data.amenities | sort(attribute='order') %}
        <h2 class="font-primary inv-h2">{{ group.group }}</h2>
        <ul class="inv-grid">
          {% for it in group.items %}
            {% set key = (it.key or it.label or it.item) | replace(' ', '_') | lower %}
            <li class="inv-item">
              <label>
                <input
                  type="checkbox"
                  class="chk"
                  data-key="inv:{{ group.group | lower | replace(' ', '_') }}:{{ key }}"
                  {% if it.featured %}data-featured="1"{% endif %}>
                <i aria-hidden="true" data-lucide="{{ it.icon or 'check' }}"></i>
                <span class="txt">
                  {{ it.label or it.item }}
                  {% if it.onRequest %} <em>(bajo petición)</em>{% endif %}
                  {% if it.note %} — <small>{{ it.note }}</small>{% endif %}
                </span>
              </label>
            </li>
          {% endfor %}
        </ul>
      {% endfor %}
    {% else %}
      {# ===== Esquema ANTIGUO ===== #}
      {% for categoria, lista in data %}
        <h2 class="font-primary inv-h2">{{ categoria }}</h2>
        <ul class="inv-grid">
          {% for it in lista %}
            {% set key = it.item | replace(' ', '_') | lower %}
            <li class="inv-item">
              <label>
                <input
                  type="checkbox"
                  class="chk"
                  data-key="inv:{{ categoria | lower | replace(' ', '_') }}:{{ key }}">
                <i aria-hidden="true" data-lucide="check"></i>
                <span class="txt">{{ it.item }}</span>
              </label>
            </li>
          {% endfor %}
        </ul>
      {% endfor %}
    {% endif %}

    <div class="inv-firmas">
      <div><strong>Revisado por:</strong> ________________________</div>
      <div><strong>Hora:</strong> __________</div>
    </div>
  </div>
</section>

<script>
  // Fecha "hoy" en cabecera (visual)
  document.addEventListener('DOMContentLoaded', () => {
    const el = document.getElementById('invDate');
    if (el) {
      const d = new Date();
      el.textContent = d.toLocaleDateString(undefined, { year:'numeric', month:'2-digit', day:'2-digit' });
    }
  });

  // Persistencia local de checks (solo en este navegador)
  (function () {
    const STORAGE_PREFIX = 'casa-bardena-inv-v1:';
    const inputs = document.querySelectorAll('.inv-item .chk');

    // Cargar estado y guardar cambios
    inputs.forEach(inp => {
      const key = STORAGE_PREFIX + (inp.getAttribute('data-key') || '');
      if (!key) return;
      try {
        if (localStorage.getItem(key) === '1') inp.checked = true;
      } catch (e) {}
      inp.addEventListener('change', () => {
        try { localStorage.setItem(key, inp.checked ? '1' : '0'); } catch (e) {}
      });
    });

    // Botón "Borrar marcas"
    const btnReset = document.getElementById('invReset');
    if (btnReset) {
      btnReset.addEventListener('click', () => {
        inputs.forEach(inp => {
          const key = STORAGE_PREFIX + (inp.getAttribute('data-key') || '');
          try { localStorage.removeItem(key); } catch (e) {}
          inp.checked = false;
        });
      });
    }

    // Fallback iconos Lucide (si algún slug no existe)
    (function ensureLucide() {
      document.querySelectorAll('[data-lucide]').forEach(el => {
        const name = el.getAttribute('data-lucide') || '';
        if (!window.lucide || !window.lucide.icons || !window.lucide.icons[name]) {
          el.setAttribute('data-lucide', 'check');
        }
      });
      window.lucide && window.lucide.createIcons && window.lucide.createIcons();
    })();
  })();
</script>

<style>
  /* Ajustes visuales e impresión */
  .inv-item { display:flex; align-items:center; }
  .inv-item label { display:flex; align-items:center; gap:.5rem; }
  .inv-item [data-lucide], .inv-item svg { width:18px; height:18px; vertical-align:-2px; }
  @media print {
    .no-print { display: none !important; }
    .card.printable { box-shadow: none !important; }
    .inv-grid { gap: .4rem !important; }
  }
</style>
